# app/config/security.yml
jms_security_extra:
    secure_all_services: false
    expressions: true
    
security:
    encoders:
      Symfony\Component\Security\Core\User\User: plaintext
#            algorithm:        sha1
#            encode_as_base64: false
#            iterations:       10

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        #ROLE_SUPER_ADMIN: [ ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    providers:
      default_provider:
        memory:
          users:
            admin: { password: hola, roles: 'ROLE_ADMIN' }
            
#       8e6215f69cbfdd525d9ff861e875e13e790af725 -> menusachadmin
#        administrators:
#            entity: { class: MenUSACHBaseBundle:User, property: username }
    firewalls:
      login_check: { form_login: true }
      login_firewall:
        pattern: ^/login$
        anonymous: ~
      secured_area:
        pattern: ^/admin
        form_login:
          login_path: /login
          check_path: /login_check
        logout:
          path: /logout
          target: /
          

    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/prop, roles: ROLE_PROP }

#security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#
#    role_hierarchy:
#        ROLE_ADMIN:       ROLE_USER
#        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#
#    providers:
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#
#    firewalls:
#        dev:
#            pattern:  ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#
#        login:
#            pattern:  ^/demo/secured/login$
#            security: false
#
#        secured_area:
#            pattern:    ^/demo/secured/
#            form_login:
#                check_path: /demo/secured/login_check
#                login_path: /demo/secured/login
#            logout:
#                path:   /demo/secured/logout
#                target: /demo/
#            #anonymous: ~
#            #http_basic:
#            #    realm: "Secured Demo Area"
#
#    access_control:
#        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
#        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
